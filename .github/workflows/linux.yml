name: Build and Release

on:
  push:
    branches:
      - fix/workflow

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "ubuntu-22.04"
            target: x86_64-unknown-linux-gnu
            architecture: x86_64

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: setup rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - run: rustup target add ${{ matrix.target }}

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends \
          clang \
          curl \
          pkg-config \
          libgtk-3-dev \
          xz-utils \
          libxv-dev \
          libwebkit2gtk-4.1-dev \
          libavcodec-dev \
          libavdevice-dev \
          libavfilter-dev \
          libavformat-dev \
          libavutil-dev \

      - name: install frontend dependencies
        run: pnpm install

      - name: Build Tauri App
        run: |
          pnpm tauri build --target ${{ matrix.target }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-${{ matrix.platform }}-artifacts
          path: |
            target/${{ matrix.target }}/release/bundle/appimage/*.AppImage

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Display structure of downloaded files
        run: ls -R dist/

      # - uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: |
      #       dist/**/appimage/*.AppImage
